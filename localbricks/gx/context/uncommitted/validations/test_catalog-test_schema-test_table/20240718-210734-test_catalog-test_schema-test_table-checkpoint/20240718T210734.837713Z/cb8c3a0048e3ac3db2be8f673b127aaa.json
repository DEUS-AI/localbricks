{
  "evaluation_parameters": {},
  "meta": {
    "active_batch_definition": {
      "batch_identifiers": {
        "catalog": "test_catalog",
        "schema": "test_schema",
        "table": "test_table",
        "timestamp": "2024-07-18 22:07:24"
      },
      "data_asset_name": "test_industry-test_catalog-test_schema-test_table",
      "data_connector_name": "test_industry-test_catalog-test_schema-test_table-data_connector",
      "datasource_name": "test_industry-test_catalog-test_schema-test_table-datasource"
    },
    "batch_markers": {
      "ge_load_time": "20240718T210734.844951Z"
    },
    "batch_spec": {
      "batch_data": "SparkDataFrame",
      "data_asset_name": "test_industry-test_catalog-test_schema-test_table"
    },
    "checkpoint_id": null,
    "checkpoint_name": "test_catalog-test_schema-test_table-checkpoint",
    "expectation_suite_name": "test_catalog-test_schema-test_table",
    "great_expectations_version": "0.18.8",
    "run_id": {
      "run_name": "20240718-210734-test_catalog-test_schema-test_table-checkpoint",
      "run_time": "2024-07-18T21:07:34.837713+00:00"
    },
    "validation_id": null,
    "validation_time": "20240718T210734.850722Z"
  },
  "results": [
    {
      "exception_info": {
        "exception_message": null,
        "exception_traceback": null,
        "raised_exception": false
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_of_type",
        "kwargs": {
          "batch_id": "cb8c3a0048e3ac3db2be8f673b127aaa",
          "column": "aircraftOwner",
          "type_": "StringType"
        },
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": "StringType"
      },
      "success": true
    },
    {
      "exception_info": {
        "exception_message": null,
        "exception_traceback": null,
        "raised_exception": false
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_match_regex",
        "kwargs": {
          "batch_id": "cb8c3a0048e3ac3db2be8f673b127aaa",
          "column": "ingestion_job_run_id",
          "regex": "^[a-zA-Z0-9 ]*$"
        },
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 10,
        "missing_count": 0,
        "missing_percent": 0.0,
        "partial_unexpected_counts": [],
        "partial_unexpected_index_list": [],
        "partial_unexpected_list": [],
        "unexpected_count": 0,
        "unexpected_index_column_names": [
          "source_file_name"
        ],
        "unexpected_index_list": [],
        "unexpected_index_query": "df.filter(F.expr((ingestion_job_run_id IS NOT NULL) AND (NOT RLIKE(ingestion_job_run_id, ^[a-zA-Z0-9 ]*$))))",
        "unexpected_list": [],
        "unexpected_percent": 0.0,
        "unexpected_percent_nonmissing": 0.0,
        "unexpected_percent_total": 0.0
      },
      "success": true
    }
  ],
  "statistics": {
    "evaluated_expectations": 2,
    "success_percent": 100.0,
    "successful_expectations": 2,
    "unsuccessful_expectations": 0
  },
  "success": true
}